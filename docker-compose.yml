version: "3.8"
services:
  db:
    image: postgres:14
    container_name: mini-saas-db
    restart: always
    ports:
      - "5435:5432"
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mini_saas}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - saasnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-mini_saas}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mini-saas-backend
    restart: unless-stopped
    entrypoint: ["/app/entrypoint.sh"]
    volumes:
      - ./backend:/app
    ports:
      - "${FLASK_PORT:-5000}:5000"
    env_file:
      - ./backend/.env
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_APP=${FLASK_APP:-app}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - POSTGRES_DB=${POSTGRES_DB:-mini_saas}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - DATABASE_URL=${DATABASE_URL:-postgresql://admin:secret@db:5432/mini_saas}
    depends_on:
      - db
    networks:
      - saasnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mini-saas-frontend
    restart: unless-stopped
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${VITE_PORT:-5173}:5173"
    env_file:
      - ./backend/.env
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000}
      - VITE_HOST=${VITE_HOST:-0.0.0.0}
      - VITE_PORT=${VITE_PORT:-5173}
    networks:
      - saasnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:

networks:
  saasnet:
